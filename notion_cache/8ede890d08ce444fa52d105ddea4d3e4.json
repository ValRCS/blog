{
  "ID": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
  "Page": {
    "alive": true,
    "content": [
      "94924502-ec8b-4d3c-8a8b-c293d79cbaf4",
      "6138d828-027b-4efe-a9b9-cf57870a8267",
      "ed30a6db-29bd-4f2d-9f9d-e51faeef56bd",
      "5cc51ead-f091-4be2-b6d8-ab2f5d4f80b5",
      "05559cf3-adb0-4cc0-a32a-011c809c54ed",
      "4d5c13a3-2fe5-4385-8715-25723d66c459",
      "890a7bd3-fd7d-4b65-93ee-fe4e03695bf5",
      "b671023b-f971-44dc-ab74-5320a4a353cd",
      "07114496-4589-4361-b32a-8fc2c2c3c896",
      "fae6738d-4737-4d6f-b9fb-1d56e8957af3",
      "a750c4fc-9321-4277-8836-1c53eb9310e3",
      "5cf0ee19-e9b9-4456-b7cb-b9bbf83aca13",
      "44000b71-6317-4048-b48a-f85290b8df4c",
      "ca6597d7-e802-4d4e-9522-0e6197de19c9",
      "8b4e28cb-cedb-4feb-a50f-34e72dcb0a6b",
      "18821237-1276-43c2-8ae5-83adc78cadbd",
      "4bff7ef7-8685-4cfc-bd76-df674abeecce",
      "5c2d3535-7e9a-47f4-9c00-9188f8e1d500",
      "0990f2db-dcb6-4990-91c8-3d4616371c8f",
      "49b26db8-4cfc-4b91-81d4-982e2d145581",
      "c2f0b8fa-a241-4701-be71-59c4a01fd702",
      "05cf719b-ad39-4c31-bfa1-d5c13e397f39",
      "0df25a72-ea93-4ce3-8d0f-8ecd5272b78b",
      "009fb3c0-9bcf-4b51-ab0e-5a459d5c4fbb",
      "901f5f2a-7bb4-49ff-9197-1b1b5c0728a5",
      "478b1717-c394-4a0d-8800-da0bdb075f56",
      "3d1d8976-3059-43b3-8cf1-2b0beafb8a46",
      "6ad283ca-7aa8-4946-9f16-3d539fa4d7f1",
      "9e022514-5381-40b1-8266-6dee52beb6e4",
      "1d034284-e1de-4b45-bb53-a1a296009351",
      "c84705cc-162f-4379-a8ae-21b747535043",
      "fb00d227-c213-42e5-ae62-b1ecffb73474",
      "a240e550-3121-4174-a906-3f65fae2b893",
      "1371cb02-dbb9-41ea-a924-21602fd4bc32",
      "9b018102-234d-4afa-8e42-b6d686743a5a",
      "b953c2a9-cdca-4c5a-b39b-39581e875977",
      "9b1c6406-4fc2-4548-b5fe-e597005a1bae",
      "c6b596cd-7b85-4c51-b12f-620e3e14a323",
      "46d64ccd-26f4-4674-a2cd-c18120475ce2",
      "a6edeaf3-c247-44c6-a26c-dcf73d50f0f1",
      "89e8e4d2-2982-43b5-9d4c-ec60ae8cc94b",
      "e7c194ab-12ac-4f6a-a1ec-e66bef8bb572",
      "e2d047c6-0690-44a3-bd69-437eebcfcc13",
      "7a67b357-56d6-4229-adfa-b0556ab71118",
      "65d3adb0-6112-47bd-8da6-5599f412382c",
      "d04ce5f2-15bb-4c86-8ed0-62dda0c3b87e",
      "28a50d22-1b58-4223-becf-be424dfd4b1b",
      "83a21b74-0111-42ba-a2e7-8bf11eb3581d",
      "49640c88-34a7-4e6b-ac22-d23fe1199b01",
      "91aaf832-8a5e-46e8-a848-7711322128bf",
      "9e6c2a6d-e870-4be6-9ea6-ba9dbb0e9255",
      "2ebc0f3d-a88e-40f0-84de-6c993e903ff1",
      "1035bcf7-6b37-441f-b62c-592857beb23f",
      "33cd90f1-cfec-4d49-b708-d7060fdddf9c",
      "72ae64d7-0e49-44dc-8f13-65620bf34cec",
      "27a1a6ad-dbcd-4738-a927-6caa9a28361d",
      "84b62d1c-b119-4a37-b727-c408e9760398",
      "d67aaa93-a374-4ab4-8efd-2f03c352d071",
      "d80b3225-046c-4c85-a480-4990e25288de",
      "32bece2b-8c41-402c-9ea0-902ba88f23e3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531888787047,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531889048868,
    "parent_id": "7495260a-1daa-4611-8858-ad2e049e77e6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Advanced command execution in Go with os/exec"
        ]
      ]
    },
    "type": "page",
    "version": 30,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "94924502-ec8b-4d3c-8a8b-c293d79cbaf4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889003610,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: wOYk"
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "Id: wOYk"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "6138d828-027b-4efe-a9b9-cf57870a8267",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: go"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Tags: go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "ed30a6db-29bd-4f2d-9f9d-e51faeef56bd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CreatedAt: 2017-06-23T09:43:49Z"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "CreatedAt: 2017-06-23T09:43:49Z"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "5cc51ead-f091-4be2-b6d8-ab2f5d4f80b5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UpdatedAt: 2017-07-09T01:52:50Z"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "UpdatedAt: 2017-07-09T01:52:50Z"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "05559cf3-adb0-4cc0-a32a-011c809c54ed",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "HeaderImage: gfx/headers/header-02.jpg"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "HeaderImage: gfx/headers/header-02.jpg"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "4d5c13a3-2fe5-4385-8715-25723d66c459",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collection: go-cookbook"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Collection: go-cookbook"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "890a7bd3-fd7d-4b65-93ee-fe4e03695bf5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Description: Examples of using os/exec library to execute external programs in Go."
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Description: Examples of using os/exec library to execute external programs in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888991592,
        "id": "b671023b-f971-44dc-ab74-5320a4a353cd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888991592,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787031,
        "id": "07114496-4589-4361-b32a-8fc2c2c3c896",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787031,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go has excellent support for executing external programs. Let’s start at the beginning."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go has excellent support for executing external programs. Let’s start at the beginning."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787032,
        "id": "fae6738d-4737-4d6f-b9fb-1d56e8957af3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787032,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running a command and capturing the output"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Running a command and capturing the output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787032,
        "id": "a750c4fc-9321-4277-8836-1c53eb9310e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787032,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s the simplest way to run "
            ],
            [
              "ls -lah",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and capture its combined stdout/stderr."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s the simplest way to run "
          },
          {
            "Text": "ls -lah",
            "AttrFlags": 2
          },
          {
            "Text": " and capture its combined stdout/stderr."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787032,
        "id": "5cf0ee19-e9b9-4456-b7cb-b9bbf83aca13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889010480,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"combined out:\\n%s\\n\", string(out))\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"combined out:\\n%s\\n\", string(out))\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "44000b71-6317-4048-b48a-f85290b8df4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787033,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/01-simple-exec.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/01-simple-exec.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "ca6597d7-e802-4d4e-9522-0e6197de19c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787033,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture stdout and stderr separately"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture stdout and stderr separately"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "8b4e28cb-cedb-4feb-a50f-34e72dcb0a6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787033,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What if you want to do the same but capture stdout and stderr separately?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What if you want to do the same but capture stdout and stderr separately?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "18821237-1276-43c2-8ae5-83adc78cadbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889014114,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr bytes.Buffer\n    cmd.Stdout = \u0026stdout\n    cmd.Stderr = \u0026stderr\n    err := cmd.Run()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"out:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr bytes.Buffer\n    cmd.Stdout = \u0026stdout\n    cmd.Stderr = \u0026stderr\n    err := cmd.Run()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"out:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "4bff7ef7-8685-4cfc-bd76-df674abeecce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/02-capture-stdout-stderr.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/02-capture-stdout-stderr.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/02-capture-stdout-stderr.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/02-capture-stdout-stderr.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "5c2d3535-7e9a-47f4-9c00-9188f8e1d500",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "0990f2db-dcb6-4990-91c8-3d4616371c8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What if the command takes a long time to finish?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What if the command takes a long time to finish?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "49b26db8-4cfc-4b91-81d4-982e2d145581",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787035,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would be nice to see its progress on the console as it happens in addition to capturing stdout/stderr."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would be nice to see its progress on the console as it happens in addition to capturing stdout/stderr."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "c2f0b8fa-a241-4701-be71-59c4a01fd702",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787035,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a little bit more involved, but not terribly so."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s a little bit more involved, but not terribly so."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "05cf719b-ad39-4c31-bfa1-d5c13e397f39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889018006,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func copyAndCapture(w io.Writer, r io.Reader) ([]byte, error) {\n    var out []byte\n    buf := make([]byte, 1024, 1024)\n    for {\n        n, err := r.Read(buf[:])\n        if n \u003e 0 {\n            d := buf[:n]\n            out = append(out, d...)\n            _, err := w.Write(d)\n            if err != nil {\n                return out, err\n            }\n        }\n        if err != nil {\n            // Read returns io.EOF at the end of file, which is not an error for us\n            if err == io.EOF {\n                err = nil\n            }\n            return out, err\n        }\n    }\n    // never reached\n    panic(true)\n    return nil, nil\n}\n\nfunc main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr []byte\n    var errStdout, errStderr error\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n    cmd.Start()\n\n    go func() {\n        stdout, errStdout = copyAndCapture(os.Stdout, stdoutIn)\n    }()\n\n    go func() {\n        stderr, errStderr = copyAndCapture(os.Stderr, stderrIn)\n    }()\n\n    err := cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout), string(stderr)\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func copyAndCapture(w io.Writer, r io.Reader) ([]byte, error) {\n    var out []byte\n    buf := make([]byte, 1024, 1024)\n    for {\n        n, err := r.Read(buf[:])\n        if n \u003e 0 {\n            d := buf[:n]\n            out = append(out, d...)\n            _, err := w.Write(d)\n            if err != nil {\n                return out, err\n            }\n        }\n        if err != nil {\n            // Read returns io.EOF at the end of file, which is not an error for us\n            if err == io.EOF {\n                err = nil\n            }\n            return out, err\n        }\n    }\n    // never reached\n    panic(true)\n    return nil, nil\n}\n\nfunc main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr []byte\n    var errStdout, errStderr error\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n    cmd.Start()\n\n    go func() {\n        stdout, errStdout = copyAndCapture(os.Stdout, stdoutIn)\n    }()\n\n    go func() {\n        stderr, errStderr = copyAndCapture(os.Stderr, stderrIn)\n    }()\n\n    err := cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout), string(stderr)\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "0df25a72-ea93-4ce3-8d0f-8ecd5272b78b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v1.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v1.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v1.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v1.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "009fb3c0-9bcf-4b51-ab0e-5a459d5c4fbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress #2"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress #2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "901f5f2a-7bb4-49ff-9197-1b1b5c0728a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Previous solution works but "
            ],
            [
              "copyAndCapture",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " looks like we’re re-implementing "
            ],
            [
              "io.Copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Thanks to Go’s use of interfaces we can re-use "
            ],
            [
              "io.Copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Previous solution works but "
          },
          {
            "Text": "copyAndCapture",
            "AttrFlags": 2
          },
          {
            "Text": " looks like we’re re-implementing "
          },
          {
            "Text": "io.Copy",
            "AttrFlags": 2
          },
          {
            "Text": ". Thanks to Go’s use of interfaces we can re-use "
          },
          {
            "Text": "io.Copy",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "478b1717-c394-4a0d-8800-da0bdb075f56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll write "
            ],
            [
              "CapturingPassThroughWriter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " struct implementing "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. It’ll capture everything that’s written to it and also write it to underlying "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll write "
          },
          {
            "Text": "CapturingPassThroughWriter",
            "AttrFlags": 2
          },
          {
            "Text": " struct implementing "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " interface. It’ll capture everything that’s written to it and also write it to underlying "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "3d1d8976-3059-43b3-8cf1-2b0beafb8a46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889022276,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// CapturingPassThroughWriter is a writer that remembers\n// data written to it and passes it to w\ntype CapturingPassThroughWriter struct {\n    buf bytes.Buffer\n    w io.Writer\n}\n\n// NewCapturingPassThroughWriter creates new CapturingPassThroughWriter\nfunc NewCapturingPassThroughWriter(w io.Writer) *CapturingPassThroughWriter {\n    return \u0026CapturingPassThroughWriter{\n        w: w,\n    }\n}\n\nfunc (w *CapturingPassThroughWriter) Write(d []byte) (int, error) {\n    w.buf.Write(d)\n    return w.w.Write(d)\n}\n\n// Bytes returns bytes written to the writer\nfunc (w *CapturingPassThroughWriter) Bytes() []byte {\n    return w.buf.Bytes()\n}\n\nfunc main() {\n    var errStdout, errStderr error\n    cmd := exec.Command(\"ls\", \"-lah\")\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n    stdout := NewCapturingPassThroughWriter(os.Stdout)\n    stderr := NewCapturingPassThroughWriter(os.Stderr)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n    go func() {\n        _, errStdout = io.Copy(stdout, stdoutIn)\n    }()\n\n    go func() {\n        _, errStderr = io.Copy(stderr, stderrIn)\n    }()\n\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// CapturingPassThroughWriter is a writer that remembers\n// data written to it and passes it to w\ntype CapturingPassThroughWriter struct {\n    buf bytes.Buffer\n    w io.Writer\n}\n\n// NewCapturingPassThroughWriter creates new CapturingPassThroughWriter\nfunc NewCapturingPassThroughWriter(w io.Writer) *CapturingPassThroughWriter {\n    return \u0026CapturingPassThroughWriter{\n        w: w,\n    }\n}\n\nfunc (w *CapturingPassThroughWriter) Write(d []byte) (int, error) {\n    w.buf.Write(d)\n    return w.w.Write(d)\n}\n\n// Bytes returns bytes written to the writer\nfunc (w *CapturingPassThroughWriter) Bytes() []byte {\n    return w.buf.Bytes()\n}\n\nfunc main() {\n    var errStdout, errStderr error\n    cmd := exec.Command(\"ls\", \"-lah\")\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n    stdout := NewCapturingPassThroughWriter(os.Stdout)\n    stderr := NewCapturingPassThroughWriter(os.Stderr)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n    go func() {\n        _, errStdout = io.Copy(stdout, stdoutIn)\n    }()\n\n    go func() {\n        _, errStderr = io.Copy(stderr, stderrIn)\n    }()\n\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787037,
        "id": "6ad283ca-7aa8-4946-9f16-3d539fa4d7f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787037,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v2.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v2.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v2.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v2.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787037,
        "id": "9e022514-5381-40b1-8266-6dee52beb6e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787037,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress #3"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress #3"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787039,
        "id": "1d034284-e1de-4b45-bb53-a1a296009351",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787039,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Turns out Go’s standard library implements "
            ],
            [
              "io.MultiWriter",
              [
                [
                  "a",
                  "https://golang.org/pkg/io/#MultiWriter"
                ]
              ]
            ],
            [
              ", which is more generic version of "
            ],
            [
              "CapturingPassThroughWriter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Let’s use that instead:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Turns out Go’s standard library implements "
          },
          {
            "Text": "io.MultiWriter",
            "Link": "https://golang.org/pkg/io/#MultiWriter"
          },
          {
            "Text": ", which is more generic version of "
          },
          {
            "Text": "CapturingPassThroughWriter",
            "AttrFlags": 2
          },
          {
            "Text": ". Let’s use that instead:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787039,
        "id": "c84705cc-162f-4379-a8ae-21b747535043",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889025985,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    var stdoutBuf, stderrBuf bytes.Buffer\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n\n    var errStdout, errStderr error\n    stdout := io.MultiWriter(os.Stdout, \u0026stdoutBuf)\n    stderr := io.MultiWriter(os.Stderr, \u0026stderrBuf)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n    go func() {\n        _, errStdout = io.Copy(stdout, stdoutIn)\n    }()\n\n    go func() {\n        _, errStderr = io.Copy(stderr, stderrIn)\n    }()\n\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatal(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdoutBuf.Bytes()), string(stderrBuf.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func main() {\n    var stdoutBuf, stderrBuf bytes.Buffer\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n\n    var errStdout, errStderr error\n    stdout := io.MultiWriter(os.Stdout, \u0026stdoutBuf)\n    stderr := io.MultiWriter(os.Stderr, \u0026stderrBuf)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n    go func() {\n        _, errStdout = io.Copy(stdout, stdoutIn)\n    }()\n\n    go func() {\n        _, errStderr = io.Copy(stderr, stderrIn)\n    }()\n\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatal(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdoutBuf.Bytes()), string(stderrBuf.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "fb00d227-c213-42e5-ae62-b1ecffb73474",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v3.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v3.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v3.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v3.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "a240e550-3121-4174-a906-3f65fae2b893",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s good to be able to write the code ourselves, but it’s even better to know standard library well!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s good to be able to write the code ourselves, but it’s even better to know standard library well!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "1371cb02-dbb9-41ea-a924-21602fd4bc32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing to program’s stdin"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing to program’s stdin"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "9b018102-234d-4afa-8e42-b6d686743a5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We know how to read program’s stdout but we can also write to its stdin."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We know how to read program’s stdout but we can also write to its stdin."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "b953c2a9-cdca-4c5a-b39b-39581e875977",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is no Go library to do bzip2 compression (only decompression is available in standard library)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is no Go library to do bzip2 compression (only decompression is available in standard library)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "9b1c6406-4fc2-4548-b5fe-e597005a1bae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use "
            ],
            [
              "bzip2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to do the compression by: * writing the data to a temporary file * call "
            ],
            [
              "bzip2 -c ${file_in}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and capture its stdout"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use "
          },
          {
            "Text": "bzip2",
            "AttrFlags": 2
          },
          {
            "Text": " to do the compression by: * writing the data to a temporary file * call "
          },
          {
            "Text": "bzip2 -c ${file_in}",
            "AttrFlags": 2
          },
          {
            "Text": " and capture its stdout"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "c6b596cd-7b85-4c51-b12f-620e3e14a323",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would be even better if we didn’t have to create a temporary file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would be even better if we didn’t have to create a temporary file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "46d64ccd-26f4-4674-a2cd-c18120475ce2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most compression programs accept data to compress/decompress on stdin."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most compression programs accept data to compress/decompress on stdin."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "a6edeaf3-c247-44c6-a26c-dcf73d50f0f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To do that on command-line we would use the following command: "
            ],
            [
              "bzip2 -c \u003c${file_in} \u003e${file_out}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To do that on command-line we would use the following command: "
          },
          {
            "Text": "bzip2 -c \u003c${file_in} \u003e${file_out}",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "89e8e4d2-2982-43b5-9d4c-ec60ae8cc94b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s the same thing in Go:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s the same thing in Go:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "e7c194ab-12ac-4f6a-a1ec-e66bef8bb572",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889031078,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// compress data using bzip2 without creating temporary files\nfunc bzipCompress(d []byte) ([]byte, error) {\n    var out bytes.Buffer\n    // -c : compress\n    // -9 : select the highest level of compresion\n    cmd := exec.Command(\"bzip2\", \"-c\", \"-9\")\n    cmd.Stdin = bytes.NewBuffer(d)\n    cmd.Stdout = \u0026out\n    err := cmd.Run()\n    if err != nil {\n        return nil, err\n    }\n    return out.Bytes(), nil\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// compress data using bzip2 without creating temporary files\nfunc bzipCompress(d []byte) ([]byte, error) {\n    var out bytes.Buffer\n    // -c : compress\n    // -9 : select the highest level of compresion\n    cmd := exec.Command(\"bzip2\", \"-c\", \"-9\")\n    cmd.Stdin = bytes.NewBuffer(d)\n    cmd.Stdout = \u0026out\n    err := cmd.Run()\n    if err != nil {\n        return nil, err\n    }\n    return out.Bytes(), nil\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787042,
        "id": "e2d047c6-0690-44a3-bd69-437eebcfcc13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787042,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/06-feed-stdin.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/06-feed-stdin.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/06-feed-stdin.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/06-feed-stdin.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787042,
        "id": "7a67b357-56d6-4229-adfa-b0556ab71118",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787042,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can also call "
            ],
            [
              "cmd.StdinPipe()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which returns "
            ],
            [
              "io.WriteCloser",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s more complicated but gives more control over writing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can also call "
          },
          {
            "Text": "cmd.StdinPipe()",
            "AttrFlags": 2
          },
          {
            "Text": ", which returns "
          },
          {
            "Text": "io.WriteCloser",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s more complicated but gives more control over writing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "65d3adb0-6112-47bd-8da6-5599f412382c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing environment of executed program"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing environment of executed program"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "d04ce5f2-15bb-4c86-8ed0-62dda0c3b87e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Things to know about environment variables in Go: * "
            ],
            [
              "os.Environ()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "[]string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where each string is in form of "
            ],
            [
              "FOO=bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "FOO",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the name of environment variable and "
            ],
            [
              "bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the value * "
            ],
            [
              "os.Getenv(\"FOO\")",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns the value of environment variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Things to know about environment variables in Go: * "
          },
          {
            "Text": "os.Environ()",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "[]string",
            "AttrFlags": 2
          },
          {
            "Text": " where each string is in form of "
          },
          {
            "Text": "FOO=bar",
            "AttrFlags": 2
          },
          {
            "Text": ", where "
          },
          {
            "Text": "FOO",
            "AttrFlags": 2
          },
          {
            "Text": " is the name of environment variable and "
          },
          {
            "Text": "bar",
            "AttrFlags": 2
          },
          {
            "Text": " is the value * "
          },
          {
            "Text": "os.Getenv(\"FOO\")",
            "AttrFlags": 2
          },
          {
            "Text": " returns the value of environment variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "28a50d22-1b58-4223-becf-be424dfd4b1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes you need to modify the environment of the executed program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes you need to modify the environment of the executed program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "83a21b74-0111-42ba-a2e7-8bf11eb3581d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You do it by setting "
            ],
            [
              "Env",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member of "
            ],
            [
              "exec.Cmd",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the same format as "
            ],
            [
              "os.Environ()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Usually you don’t want to construct a completely new environment but pass your own environment augmented with more variables:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You do it by setting "
          },
          {
            "Text": "Env",
            "AttrFlags": 2
          },
          {
            "Text": " member of "
          },
          {
            "Text": "exec.Cmd",
            "AttrFlags": 2
          },
          {
            "Text": " in the same format as "
          },
          {
            "Text": "os.Environ()",
            "AttrFlags": 2
          },
          {
            "Text": ". Usually you don’t want to construct a completely new environment but pass your own environment augmented with more variables:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "49640c88-34a7-4e6b-ac22-d23fe1199b01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889034172,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "cmd := exec.Command(\"programToExecute\")\n    additionalEnv := \"FOO=bar\"\n    newEnv := append(os.Environ(), additionalEnv))\n    cmd.Env = newEnv\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"%s\", out)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "cmd := exec.Command(\"programToExecute\")\n    additionalEnv := \"FOO=bar\"\n    newEnv := append(os.Environ(), additionalEnv))\n    cmd.Env = newEnv\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"%s\", out)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787044,
        "id": "91aaf832-8a5e-46e8-a848-7711322128bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787044,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/05-change-environment.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/05-change-environment.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/05-change-environment.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/05-change-environment.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "9e6c2a6d-e870-4be6-9ea6-ba9dbb0e9255",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Package "
            ],
            [
              "shurcooL/go/osutil",
              [
                [
                  "a",
                  "https://godoc.org/github.com/shurcooL/go/osutil#Environ"
                ]
              ]
            ],
            [
              " offers slightly more civilized way of manipulating environment variables."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Package "
          },
          {
            "Text": "shurcooL/go/osutil",
            "Link": "https://godoc.org/github.com/shurcooL/go/osutil#Environ"
          },
          {
            "Text": " offers slightly more civilized way of manipulating environment variables."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "2ebc0f3d-a88e-40f0-84de-6c993e903ff1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Check early that a program is installed"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Check early that a program is installed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "1035bcf7-6b37-441f-b62c-592857beb23f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine you wrote a program that takes a long time to run. You call executable "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the end to perform some essential task."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine you wrote a program that takes a long time to run. You call executable "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " at the end to perform some essential task."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "33cd90f1-cfec-4d49-b708-d7060fdddf9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " executable is not present, the call will fail."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " executable is not present, the call will fail."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "72ae64d7-0e49-44dc-8f13-65620bf34cec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787046,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a good idea to detect that at the beginning of the program and fail early with descriptive error message."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s a good idea to detect that at the beginning of the program and fail early with descriptive error message."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "27a1a6ad-dbcd-4738-a927-6caa9a28361d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787046,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can do it using "
            ],
            [
              "exec.LookPath",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can do it using "
          },
          {
            "Text": "exec.LookPath",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "84b62d1c-b119-4a37-b727-c408e9760398",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889037361,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func checkLsExists() {\n    path, err := exec.LookPath(\"ls\")\n    if err != nil {\n        fmt.Printf(\"didn't find 'ls' executable\\n\")\n    } else {\n        fmt.Printf(\"'ls' executable is in '%s'\\n\", path)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func checkLsExists() {\n    path, err := exec.LookPath(\"ls\")\n    if err != nil {\n        fmt.Printf(\"didn't find 'ls' executable\\n\")\n    } else {\n        fmt.Printf(\"'ls' executable is in '%s'\\n\", path)\n    }\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "d67aaa93-a374-4ab4-8efd-2f03c352d071",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787047,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/04-check-exe-exists.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/04-check-exe-exists.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/04-check-exe-exists.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/04-check-exe-exists.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "d80b3225-046c-4c85-a480-4990e25288de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787047,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another way to check if program exists is to try to execute in a no-op mode (e.g. many programs support "
            ],
            [
              "--help",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " option)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another way to check if program exists is to try to execute in a no-op mode (e.g. many programs support "
          },
          {
            "Text": "--help",
            "AttrFlags": 2
          },
          {
            "Text": " option)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "32bece2b-8c41-402c-9ea0-902ba88f23e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787047,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code for this chapter: https://github.com/kjk/go-cookbook/tree/master/advanced-exec"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code for this chapter: https://github.com/kjk/go-cookbook/tree/master/advanced-exec"
          }
        ]
      }
    ],
    "title": "Advanced command execution in Go with os/exec",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 10
    }
  ],
  "Collections": null,
  "CollectionViews": null
}